// <auto-generated />
using System;
using AI_Emissions_Reduction.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AI_Emissions_Reduction.Migrations
{
    [DbContext(typeof(MyDBcontext))]
    [Migration("20241012223438_Mig_1")]
    partial class Mig_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.EmployeeAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AvailableFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AvailableUntil")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAvailabilities");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.EmployeeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WasteCollectionRequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeSchedules");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WasteCollectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.WasteCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CollectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WasteTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("UserId");

                    b.HasIndex("WasteTypeId");

                    b.ToTable("WasteCollections");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.WasteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WasteTypes");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.SystemSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.EmployeeAvailability", b =>
                {
                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.Employee", "employee")
                        .WithMany("employeeAvailabilities")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.EmployeeSchedule", b =>
                {
                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.Employee", "employee")
                        .WithMany("employeeSchedules")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.Feedback", b =>
                {
                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.Employee", "employee")
                        .WithOne("feedBack")
                        .HasForeignKey("AI_Emissions_Reduction.Data.Entity.One_to_Many.Feedback", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.User", "user")
                        .WithOne("feedBack")
                        .HasForeignKey("AI_Emissions_Reduction.Data.Entity.One_to_Many.Feedback", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("user");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.Notification", b =>
                {
                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.Employee", "employee")
                        .WithMany("notifications")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.User", "user")
                        .WithMany("notifications")
                        .HasForeignKey("UserId");

                    b.Navigation("employee");

                    b.Navigation("user");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.Payment", b =>
                {
                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.User", b =>
                {
                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.Employee", "employee")
                        .WithMany("users")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.WasteCollection", b =>
                {
                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.Employee", "employee")
                        .WithMany("WasteCollection")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.User", "user")
                        .WithMany("WasteCollectionRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AI_Emissions_Reduction.Data.Entity.One_to_Many.WasteType", "WasteType")
                        .WithMany("WasteCollections")
                        .HasForeignKey("WasteTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WasteType");

                    b.Navigation("employee");

                    b.Navigation("user");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.Employee", b =>
                {
                    b.Navigation("WasteCollection");

                    b.Navigation("employeeAvailabilities");

                    b.Navigation("employeeSchedules");

                    b.Navigation("feedBack")
                        .IsRequired();

                    b.Navigation("notifications");

                    b.Navigation("users");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.User", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("WasteCollectionRequests");

                    b.Navigation("feedBack")
                        .IsRequired();

                    b.Navigation("notifications");
                });

            modelBuilder.Entity("AI_Emissions_Reduction.Data.Entity.One_to_Many.WasteType", b =>
                {
                    b.Navigation("WasteCollections");
                });
#pragma warning restore 612, 618
        }
    }
}
